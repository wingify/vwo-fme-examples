/**
 * Copyright 2025 Wingify Software Pvt. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import React from 'react';
import { useGetFlag, useGetFlagVariable } from 'vwo-fme-react-sdk';
import { vwoConfig } from '../../config/vwo.config';

interface FeatureFlagComponentProps {
  userId: string;
}

const FeatureFlagComponent: React.FC<FeatureFlagComponentProps> = ({ userId }) => {
  const { flag, isReady } = useGetFlag(vwoConfig.flagKey, { id: userId });

  if (!isReady) {
    return (
      <>
        <div className="result-footer">Loading...</div>
        <div className="response-wrapper">
          <p>Loading...</p>
        </div>
      </>
    );
  }

  const modelNameVariable = useGetFlagVariable(flag, vwoConfig.variableKey1, 'GPT-4');
  const queryAnswerVariable = useGetFlagVariable<Record<string, unknown>>(flag, vwoConfig.variableKey2, {});

  if (!flag || typeof flag.isEnabled() !== 'boolean') {
    return (
      <>
        <div className="result-footer">Error</div>
        <div className="response-wrapper">
          <p>Error: Invalid flag value or feature not found.</p>
        </div>
      </>
    );
  }

  const defaultContent =
    "To reset your password:\n1. Open the app and go to the login screen.\n2. Tap 'Forgot Password?' below the password field.\n3. Enter your registered email address and submit.\n4. Check your inbox for a password reset email (it may take a few minutes).\n5. Click the link in the email and follow the instructions to create a new password.\n6. Return to the app and log in with your new password.";

  const content: string = flag.isEnabled()
    ? (queryAnswerVariable?.content as string) ?? defaultContent
    : defaultContent;
  const backgroundColor: string = flag.isEnabled() ? (queryAnswerVariable?.background as string) || '#fff' : '#fff';

  return (
    <>
      <div className="result-footer">
        Response generated by{' '}
        <i>
          <strong>{modelNameVariable}</strong>
        </i>
        <span style={{ float: 'right' }}>
          Feature:{' '}
          <span style={{ color: flag.isEnabled() ? '#4CAF50' : '#FF6B6B' }}>
            <strong>{flag.isEnabled() ? 'Enabled' : 'Disabled'}</strong>
          </span>{' '}
          for user: <i>{userId}</i>
        </span>
      </div>
      <div className="response-wrapper" style={{ backgroundColor }}>
        <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}>{content}</pre>
      </div>
    </>
  );
};

export default FeatureFlagComponent;
